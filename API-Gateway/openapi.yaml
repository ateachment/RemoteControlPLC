openapi: 3.0.4
info:
  title: Swagger API GATEWAY - OpenAPI 3.0
  description: |-
   This is a simple API Gateway for demonstration puposes
  termsOfService: https://swagger.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12

servers:
  - url: http://localhost:5000
tags:
  - name: user
    description: Operations about user
paths:
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system.
      description: Log into the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "opcUser"
                password:
                  type: string
                  example: "opcUser123"
     
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string
                    example: "Welcome opcUser!"
                  status:
                    type: string
                    example: success
                  token:
                    type: string
                    example: 123456
                  
        '401':
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                type: object
                properties:   
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "Invalid credentials"

  /user/logout/{token}:
    delete:
      tags:
        - user
      summary: Logs out current logged in user
      description: ''
      operationId: logoutUser
      parameters: 
      - name: token
        in: path
        description: Token that has to be deleted
        required: true
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Logout sucessful
          content:
            application/json:
              schema:
                type: object
                properties:   
                  message:
                    type: string
                    example: "Byebye opcUser!"
                  status:
                    type: string
                    example: success
        '403':
          description: Logout failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'

    
  /info/{token}:
    get:
      tags:
        - info
      summary: Informs about User's PLCs
      description: ''
      operationId: infoPLCs
      parameters: 
      - name: token
        in: path
        description: Valid token of user's PLCs
        required: true
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Infos about PLCs successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLCs'
        '403':
          description: Invalid Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
    
  /info/{user_opc_clients}/{token}:
    get:
      tags:
        - info
      summary: Informs about "Sch√ºtz" and "Motorschutzschalter" of user's PLCs
      description: ''
      operationId: infoPLCsDetails
      parameters: 
      - name: user_opc_clients
        in: path
        description: User's PLCs connections strings
        required: true
        schema:
          $ref: '#/components/schemas/UserOpcClients'
      - name: token
        in: path
        description: Valid token of user's PLCs
        required: true
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Infos about PLCs successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLCs'
        '403':
          description: Invalid Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
    
    
components:
  schemas:
  
    Token:
      type: string
      example: 123456
      
    InvalidToken:
      type: object
      properties:   
        message:
          type: string
          example: "Invalid token"
        status:
          type: string
          example: error
          
    PLCs:
      type: object
      properties:   
        opc_clients:
          type: string
          example: "[[Client(opc.tcp://192.168.178.25:4840/), 'online']]"
        status:
          type: string
          example: success
          
    UserOpcClients:
        type: string
        example: "[192.168.178.25:4840]"

          
          
          